(()=>{"use strict";class t{constructor(t){this.arr=t,this.root=null}}function l(t){if(t.length<=1)return t;const n=Math.floor(t.length/2);return function(t,l){let n=0,o=0;const r=[];for(;n<t.length&&o<l.length;)t[n]===l[o]?(r.push(t[n]),n+=1,o+=1):t[n]<l[o]?(r.push(t[n]),n+=1):(r.push(l[o]),o+=1);for(;n<t.length;)r.push(t[n]),n+=1;for(;o<l.length;)r.push(l[o]),o+=1;return r}(l(t.slice(0,n)),l(t.slice(n)))}class n{constructor(t){this.data=t,this.left=null,this.right=null}}function o(t,l,r){if(l>r)return null;const e=Math.floor((l+r)/2),h=new n(t[e]);return h.left=o(t,l,e-1),h.right=o(t,e+1,r),h}const r=function(t){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];null!==t&&(null!==t.right&&r(t.right,`${l}${n?"│   ":"    "}`,!1),console.log(`${l}${n?"└── ":"┌── "}${t.data}`),null!==t.left&&r(t.left,`${l}${n?"    ":"│   "}`,!0))},e=(t,l)=>null===l?l=new n(t):(t<l.data?l.left=e(t,l.left):t>l.data&&(l.right=e(t,l.right)),l),h=(t,l)=>{let n=0;return null==t||t.data===l||(n+=1,n=h(t.left,l),n=h(t.right,l),n-=1),n};!function(){const n=l([1,7,4,23,8,9,4,3,5,7,9,67,6345,324]),u=new t(n),s=n.length-1;u.root=o(n,0,s),e(127,u.root),console.log(h(u.root,5)),r(u.root)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,